# App Flow Document for *PulseFire*

## 1. Introduction
This App Flow document outlines the user journey and system interactions for *PulseFire*, a first-person shooter (FPS) prototype developed with Unreal Engine. It details the key flows within the application, from launching the game to completing a multiplayer match, focusing on how users navigate and interact with the system. The document is informed by the Product Description and Target Audience, ensuring alignment with the needs of FPS gamers who prefer controller-based gameplay.

## 2. Main Menu Flow
The main menu serves as the entry point for players, providing access to multiplayer functionality or the option to exit the game.

1. **Launch Game**: The player starts *PulseFire*, and the main menu is displayed.
2. **Display Main Menu**: The main menu presents two options:
   - "Multiplayer": Navigates to the multiplayer menu for hosting or joining a game.
   - "Quit": Closes the game application.
3. **Select "Multiplayer"**: Choosing "Multiplayer" transitions the player to the multiplayer menu.
4. **Select "Quit"**: Choosing "Quit" terminates the game.

## 3. Multiplayer Menu Flow
The multiplayer menu enables players to set up or join a multiplayer session.

1. **Access Multiplayer Menu**: After selecting "Multiplayer" from the main menu, the multiplayer menu displays two options:
   - "Host Game": Initiates a new game session.
   - "Join Game": Connects to an existing session.
2. **Host Game Flow**:
   - The player selects "Host Game."
   - The system creates a local game session using a listen server and displays an IP address for other players to join.
   - The host can view connected players and select "Start Game" when ready.
3. **Join Game Flow**:
   - The player selects "Join Game."
   - The system prompts for the host’s IP address.
   - Upon entering a valid IP, the player connects to the host’s session and awaits the match start.
   - If the IP is invalid, an error message (e.g., "Failed to connect") is shown.

## 4. In-Game Flow
The in-game flow covers the gameplay experience from match initiation to conclusion.

1. **Start Match**:
   - The host selects "Start Game," and all connected players are spawned at designated points on a 500x500-meter map.
2. **Gameplay Loop**:
   - Players move using the left analog stick (forward, backward, left, right).
   - Players rotate the camera using the right analog stick.
   - Players can jump (A button), crouch (B button), aim down sights (right bumper), shoot (right trigger), or reload (X button).
   - The heads-up display (HUD) shows:
     - Health bar (top-left, red/green gradient).
     - Ammo count (bottom-right, numeric).
     - Match timer (top-right, countdown format).
3. **Combat Mechanics**:
   - Players shoot using raycast-based hit detection, with each hit reducing the target’s health (e.g., 25 points per bullet).
   - If a player’s health reaches zero, they die and respawn after a 5-second delay at a spawn point.
4. **Match Progression**:
   - The match continues until the timer expires (e.g., 5 minutes) or a score limit is reached (e.g., 50 points).
   - The system tracks team or individual scores based on kills.
5. **End Match**:
   - Upon match completion, a results screen displays final scores and declares a winner.
   - Players can review results before returning to the main menu.

## 5. Pause Menu Flow
The pause menu allows players to temporarily halt gameplay.

1. **Pause Game**:
   - During a match, pressing the Start button pauses the game and displays the pause menu as a semi-transparent overlay.
2. **Pause Menu Options**:
   - "Resume": Returns the player to the active game session.
   - "Main Menu": Exits the current session and returns to the main menu.
3. **Resume Game**:
   - Selecting "Resume" closes the pause menu and resumes gameplay.
4. **Exit to Main Menu**:
   - Selecting "Main Menu" terminates the session and navigates to the main menu.

## 6. Error Handling and Edge Cases
The system handles key edge cases to ensure a smooth experience:

- **Invalid IP Address**: Entering an incorrect IP when joining a game triggers an error message, prompting the player to retry.
- **Player Disconnection**: If a player disconnects, the system notifies others, allows reconnection if within the match duration, and continues the game.
- **Empty Session**: If the host starts a match alone, the game proceeds with only the host, allowing testing of mechanics.

## 7. Key Flows Summary
The table below summarizes the primary application flows:

| **Flow**              | **Start